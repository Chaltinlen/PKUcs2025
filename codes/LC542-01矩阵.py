from typing import *
from collections import deque
class Solution:
    def updateMatrix(self, mat: List[List[int]]) -> List[List[int]]:
        DIRECTIONS = ((0, 1), (1, 0))
        m = len(mat)
        n = len(mat[0])
        ans = [[1e9 if mat[j][i] else 0 for i in range(n)] for j in range(m)]
        def bfs(i, j):
            if ans[i][j] == 0:
                return
            queue = deque()
            queue.append((i, j))
            inq = {(i, j)}
            while queue:
                x, y = queue.popleft()
                for dx, dy in DIRECTIONS:
                    nx, ny = x + dx, y + dy
                    if 0 <= nx < m and 0 <= ny < n and (nx, ny) not in inq:
                        if ans[nx][ny] == 1e9:
                            queue.append((nx, ny))
                        elif ans[x][y] > ans[nx][ny] + 1:
                            ans[x][y] = ans[nx][ny] + 1
                            for d1x, d1y in DIRECTIONS:
                                n1x, n1y = x + d1x, y + d1y
                                if 0 <= n1x < m and 0 <= n1y < n:
                                    inq -= {(n1x, n1y)}
                                    queue.append((n1x, n1y))

        for i in range(m):
            for j in range(n):
                if mat[i][j]:
                    bfs(i, j)
                    break
            else:
                continue
            break

        return ans
if __name__ == '__main__':
    sol = Solution()
    print(*sol.updateMatrix([[0,0,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,1,0,1,1,1,0,0],[1,0,0,0,1,1,0,0,0,0,1,1,1,1,0,1,1,0,0,1,1,0,0,0,1,0,1,1,1,1],[1,1,1,0,1,0,1,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,1,1,1,0,0],[1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,0,1,1,0,1,1,1],[1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,1,1,0,1,0,0,1,0,1,1,0,1,1,1],[1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,1,1,0,1],[1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1],[1,1,0,1,0,1,1,1,1,1,0,1,0,0,0,1,1,0,1,0,1,1,1,1,0,1,0,1,1,1],[1,1,1,1,1,0,0,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1],[0,1,1,0,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1],[1,0,1,0,0,0,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,1,1,1,1,0,0,1,0],[1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1],[1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1],[1,1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1],[1,1,0,0,1,1,1,1,1,1,0,1,1,0,0,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1],[0,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,1,1,0],[1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,0,0,1,0,1,1,1,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0],[1,0,0,1,0,1,0,0,1,1,0,0,1,1,1,1,0,0,1,1,0,1,0,1,0,1,1,1,0,1],[1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1],[1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1],[1,1,1,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,0,1,1,0,1],[0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,0,1,1,1],[0,1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,1,0,1,1,1,1,1,0,1,0,1,1,0],[0,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,0,0,1,1,0,1,0,0,1,0,1,1],[1,1,1,1,0,1,0,1,0,0,1,0,1,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0,1,0],[0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0],[0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1],[1,1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1],[1,1,0,0,0,1,0,1,0,0,1,1,0,1,0,0,1,1,1,0,0,1,1,1,0,0,1,0,0,1]]), sep="\n")